create table BOOKS_AUD (
    EVENT_ID int not null auto_increment,
    EVENT_DATE datetime not null,
    EVENT_TYPE varchar(20) default null,
    BOOK_ID int not null,
    OLD_TITLE varchar(255),
    NEW_TITLE varchar(255),
    OLD_PUBYEAR int,
    NEW_PUBYEAR int,
    OLD_BESTSELLER boolean,
    NEW_BESTSELLER boolean,
    primary key (EVENT_ID)
);

create table READERS_AUD (
    EVENT_ID int not null auto_increment,
    EVENT_DATE datetime not null,
    EVENT_TYPE varchar(20) default null,
    READER_ID int not null,
    OLD_FIRSTNAME varchar(255),
    NEW_FIRSTNAME varchar(255),
    OLD_LASTNAME varchar(255),
    NEW_LASTNAME varchar(255),
    OLD_PESELID varchar(11),
    NEW_PESELID varchar(11),
    OLD_VIP_LEVEL varchar(20),
    NEW_VIP_LEVEL varchar(20),
    primary key (EVENT_ID)
);

delimiter $$
create trigger BOOKS_INSERT after insert on BOOKS
    for each row
    begin
        insert into BOOKS_AUD(EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER)
        value (curtime(), 'INSERT', NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
    end $$
delimiter ;

insert into BOOKS (TITLE, PUBYEAR, BESTSELLER) value ('Mastering Autodesk Revit', 2020, true);
commit;

delimiter $$
create trigger BOOKS_DELETE after delete on BOOKS
    for each row
    begin
        insert into BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID)
        value (curtime(), 'DELETE', OLD.BOOK_ID);
    end $$
delimiter ;

delete from BOOKS where BOOK_ID = 8;
commit;

delimiter $$
create trigger BOOKS_UPDATE after update on BOOKS
    for each row
    begin
        insert into BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, OLD_TITLE, NEW_TITLE, OLD_PUBYEAR, NEW_PUBYEAR, OLD_BESTSELLER, NEW_BESTSELLER)
        value (curtime(), 'UPDATE', NEW.BOOK_ID, OLD.TITLE, NEW.TITLE, OLD.PUBYEAR, NEW.PUBYEAR, OLD.BESTSELLER, NEW.BESTSELLER);
    end $$
delimiter ;

update BOOKS set BESTSELLER = false where BOOK_ID = 3;
commit;

delimiter $$
create trigger READERS_INSERT after insert on READERS
    for each row
    begin
        insert into READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL)
        value (curtime(), 'INSERT', NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL);
    end $$
delimiter ;

insert into READERS (FIRSTNAME, LASTNAME, PESELID, VIP_LEVEL) VALUE ('John', 'Connor', '88101215700', 'Gold customer');
commit;

delimiter $$
create trigger READERS_DELETE after delete on READERS
    for each row
    begin
        insert into READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID)
        value (curtime(), 'DELETE', OLD.READER_ID);
    end $$
delimiter ;

delete from READERS where READER_ID = 6;
commit;

delimiter $$
create trigger READERS_UPDATE after update on READERS
    for each row
    begin
        insert into READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, OLD_FIRSTNAME, NEW_FIRSTNAME, OLD_LASTNAME, NEW_LASTNAME, OLD_PESELID, NEW_PESELID, OLD_VIP_LEVEL, NEW_VIP_LEVEL)
        value (curtime(), 'UPDATE', NEW.READER_ID, OLD.FIRSTNAME, NEW.FIRSTNAME, OLD.LASTNAME, NEW.LASTNAME, OLD.PESELID, NEW.PESELID, OLD.VIP_LEVEL, NEW.VIP_LEVEL);
    end $$
delimiter ;

update READERS set PESELID = '12345678910' where READER_ID = 2;
commit;